---
layout: post
title: API-Model
date: 2017-07-20 15:32:24.000000000 +09:00
---

#### What's the problem?

API is hard code on Alamofire requests, or global. It's hard to edit on one place. 

####  

1. We use struct to build this model, becasue struct make it unique, and we dont need to inherent the code, it only returns different apis.

2. We use enum inside the struct, so we use the switch func to easily return the specific apis, each enum is a router


````
//
//  ChumiApiClient.swift
//  chumie
//
//  Created by Yitao Li on 2017-07-20.
//  Copyright Â© 2017 Yitao Li. All rights reserved.
//

import Foundation
import Alamofire

struct ChumiApiClient {

static let hostURL = "http://xxx.cloudfront.net"
static let imgHostURL = "http://xxx.cloudfront.net"

    //member relevant router
    enum Member: URLRequestConvertible {

        case login([String: AnyObject])
        case checkEmailDuplicate([String: AnyObject])
        case register([String: AnyObject])
        case registerWithFacebook([String: AnyObject])

        var method: Alamofire.HTTPMethod {
            switch self {
            case .login:
            return .post
            case .checkEmailDuplicate:
            return .post
            case .register:
            return .post
            case .registerWithFacebook:
            return .post
            }
        }



        func asURLRequest() throws -> URLRequest {

            let router = "/Member"

            var path: String {
            switch self {
            case .login:
            return router + "/Login"
            case .checkEmailDuplicate:
            return router + "/CheckEmailDuplicate"
            case .register:
            return router + "/RegNoInvite"
            case .registerWithFacebook:
            return router + "/RegFromFacebook"
            }
        }

            let destinationURL = URL(string: ChumiApiClient.hostURL)
            var destinationURLRequest = URLRequest(url: destinationURL!.appendingPathComponent(path))
            destinationURLRequest.httpMethod = method.rawValue

            switch self {

            case .login(let parameters):
            return try Alamofire.JSONEncoding.default.encode(destinationURLRequest, with: parameters)

            case .register(let parameters):
            return try Alamofire.URLEncoding.default.encode(destinationURLRequest, with: parameters)

            case .checkEmailDuplicate(let parameters):
            return try Alamofire.URLEncoding.default.encode(destinationURLRequest, with: parameters)

            case .registerWithFacebook(let parameters):
            return try Alamofire.URLEncoding.default.encode(destinationURLRequest, with: parameters)

            }
        }
    }

    //Activity relevant router
    enum Activity {

    }

    //other routers

}
````

















